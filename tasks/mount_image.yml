---

#default_raspbian="$IMG_DIR/raspbian.img"
#raspbian=${1:-$default_raspbian}

#image_sectors=$(fdisk -o start --units=sectors -l $raspbian)
#image_sizes=$(fdisk -o size --bytes -l $raspbian | tail -n 2)

#partitions=$(echo -e "$image_sectors" | tail -n 2)
#sector_size=$(echo -e "$image_sectors" | perl -lne 'print $1 if /Units.*= (.*) bytes/')

#boot_sector_offset=$(echo -e "$partitions" | sed '1q;d')
#os_sector_offset=$(echo -e "$partitions" | sed '2q;d')

#boot_byte_offset=$(($boot_sector_offset*$sector_size))
#os_byte_offset=$(($os_sector_offset*$sector_size))

#boot_sizelimit=$(echo -e "$image_sizes" | sed '1q;d' | xargs)
#os_sizelimit=$(echo -e "$image_sizes" | sed '2q;d' | xargs)


# ===========================================================
# do mounting
#
# mount -v -o offset=$boot_byte_offset,sizelimit=$boot_sizelimit -t auto $raspbian $PI_BOOT_MOUNT
# mount -v -o offset=$os_byte_offset,sizelimit=$os_sizelimit -t auto $raspbian $PI_OS_MOUNT

- block:

  - name: check if /dev/mapper/loop0p1 file exists
    stat: 
      path: /dev/mapper/loop0p1
    register: mapping_exists

  - name: create the loop0  from the image file
    ansible.builtin.command:
      cmd: "/usr/sbin/kpartx -asv {{ pi_os_image }}"
    register: kpartx_result
    when: not mapping_exists.stat.exists

  - name: kpartx results
    ansible.builtin.debug:
      var: kpartx_result
      verbosity: 0
    when: kpartx_result is defined

  - name: Create the boot mount directory if it does not exist
    ansible.builtin.file:
      path: "{{ pi_image_boot_mount }}"
      state: directory
      mode: '0755'

  - name: Mount boot partition
    ansible.posix.mount:
      path: "{{ pi_image_boot_mount }}"
      src: "/dev/mapper/loop0p1"
      fstype: auto
      state: mounted
    #become: yes

  - name: Create a rootfs if it does not exist
    ansible.builtin.file:
      path: "{{ pi_image_rootfs_mount }}"
      state: directory
      mode: '0755'

  - name: Mount root partition
    ansible.posix.mount:
      path: "{{ pi_image_rootfs_mount }}"
      src: "/dev/mapper/loop0p2"
      fstype: auto
      state: mounted
    #become: yes

  tags:
    - mount
    - all
 
